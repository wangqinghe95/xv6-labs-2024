# RISC-V assembly

1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A: a2 store 13 an arguments passed to printf

2. Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A: Compiler inline function f called by main, and function g called by f.

3. At what address is the function printf located?
A: 6b0

4. What value is in the register ra just after the jalr to printf in main?
A: 0x34, the address of the next instruction

5. What is the output? The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
A: Output is He110 World. if RISC-V were instead big-endian and output the same value, the i should be changed as 0x726c6400, and 57616 can't be modified.

6. In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen? `printf("x=%d y=%d", 3);`
A: the function of printf will read value of register a2